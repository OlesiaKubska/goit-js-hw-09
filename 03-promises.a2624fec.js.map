{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAK6C,SAApCC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAdMO,SAASC,cAAc,QAC/BC,iBAAiB,UAiBtB,SAAsBC,GACpBA,EAAMC,iBAO8C,IALpD,IAAMC,EAASC,SAASH,EAAMI,OAAOC,SAASH,OAAOI,OAC/CC,EAAQJ,SAASH,EAAMI,OAAOC,SAASf,MAAMgB,OAC7CE,EAAOL,SAASH,EAAMI,OAAOC,SAASG,KAAKF,OAC3CG,EAAU,GAEPC,EAAI,EAAGA,EAAIR,EAAQQ,IAC1BD,EAAQE,KAAKvB,EAAcsB,EAAGH,EAAQG,EAAIF,IAGsBjB,QAA1DqB,IAAIH,GACTI,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9D4B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBJ,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE5DU,EAAMoB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', handleSubmit); //додали обробник події submit до форми, який викликає функцію handleSubmit\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  \n  const amount = parseInt(event.target.elements.amount.value);\n  const delay = parseInt(event.target.elements.delay.value);\n  const step = parseInt(event.target.elements.step.value);\n  const promise = []; //створюємо масив promises, в який додаємо стільки промісів, скільки введ\n\n  for (let i = 0; i < amount; i++) {\n    promise.push(createPromise(i, delay + i * step));\n  }\n//Коли всі проміси будуть створені, використовуємо Promise.all для очікування їх виконання. \n  Promise.all(promise)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    event.currentTarget.reset();\n    \n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","amount","parseInt","target","elements","value","delay1","step","promise","i","push","all","then","param","Notify","success","concat","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.a2624fec.js.map"}